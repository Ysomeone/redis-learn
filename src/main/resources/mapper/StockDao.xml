<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.yuan.redis.dao.StockDao">
	
	<resultMap id="StockResultMap" type="com.yuan.redis.entity.Stock">
		<id property="id" column="id"  />
		<result property="name" column="name" />
		<result property="count" column="count" />
		<result property="sale" column="sale" />
		<result property="version" column="version" />
	</resultMap>
	
	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 id ,name ,count ,sale ,version 
	</sql>
	
	<sql id="base_value_column">
		 #{id},#{name},#{count},#{sale},#{version}
	</sql>
	
	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">
       <if test="ids != null  and ids.size > 0  ">
			AND ID IN
			<foreach item="id" index="index" collection="ids" open="("
				separator="," close=")">
				#{id}
			</foreach>
		</if>

		<if test="id != null ">
			AND id = #{id,jdbcType=INTEGER}
		</if>

	    	<!-- 大于等于id -->
		<if test="filter_ids != null">
			AND id<![CDATA[>=]]>#{filter_ids}
		</if>
		<!-- 小于等于id -->
	    <if test="filter_ide!= null">
			AND id<![CDATA[<=]]>#{filter_ide}
		</if>


		<if test="name != null ">
			AND name = #{name,jdbcType=VARCHAR}
		</if>
	   <if test="namelike != null ">
			AND name like CONCAT('%',#{namelike},'%')
		</if>



		<if test="count != null ">
			AND count = #{count,jdbcType=INTEGER}
		</if>

	    	<!-- 大于等于count -->
		<if test="filter_counts != null">
			AND count<![CDATA[>=]]>#{filter_counts}
		</if>
		<!-- 小于等于count -->
	    <if test="filter_counte!= null">
			AND count<![CDATA[<=]]>#{filter_counte}
		</if>


		<if test="sale != null ">
			AND sale = #{sale,jdbcType=INTEGER}
		</if>

	    	<!-- 大于等于sale -->
		<if test="filter_sales != null">
			AND sale<![CDATA[>=]]>#{filter_sales}
		</if>
		<!-- 小于等于sale -->
	    <if test="filter_salee!= null">
			AND sale<![CDATA[<=]]>#{filter_salee}
		</if>


		<if test="version != null ">
			AND version = #{version,jdbcType=INTEGER}
		</if>

	    	<!-- 大于等于version -->
		<if test="filter_versions != null">
			AND version<![CDATA[>=]]>#{filter_versions}
		</if>
		<!-- 小于等于version -->
	    <if test="filter_versione!= null">
			AND version<![CDATA[<=]]>#{filter_versione}
		</if>


	</sql>
	
	<!-- 设置语句 -->
	<sql id="set_column">
		<if test="id != null ">
			id = #{id,jdbcType=INTEGER},
		</if>
		<if test="name != null ">
			name = #{name,jdbcType=VARCHAR},
		</if>
		<if test="count != null ">
			count = #{count,jdbcType=INTEGER},
		</if>
		<if test="sale != null ">
			sale = #{sale,jdbcType=INTEGER},
		</if>
		<if test="version != null ">
			version = #{version,jdbcType=INTEGER},
		</if>
	</sql>

	<!-- 根据ID查询 -->
	<select id="find" resultMap="StockResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_STOCK
		WHERE	ID=#{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询所有 -->
	<select id="findAll" resultMap="StockResultMap">
		SELECT	<include refid="base_column" />
		FROM	T_STOCK
	</select>
	
	<!-- 统计记录数 -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM T_STOCK
		<where> 
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 插入 -->
	<insert id="insert" parameterType="com.yuan.redis.entity.Stock">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">  
	          SELECT LAST_INSERT_ID() AS ID    
	    </selectKey>  
		INSERT T_STOCK 
				(<include refid="base_column" /> )
		VALUES	(<include refid="base_value_column" />)
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="com.yuan.redis.entity.Stock">
		UPDATE	T_STOCK
		<set>
			<include refid="set_column" />
		</set>
		WHERE	ID = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 删除单条记录 -->
	<delete id="delete">
		DELETE	FROM T_STOCK
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>
	
	
	<!-- 删除多条记录-->
	<delete id="deleteAll">
		DELETE	FROM T_STOCK
		WHERE	ID	IN
    	<foreach item="StockId" index="index" collection="ids" open="(" separator="," close=")">
	  		#{StockId} 
		</foreach>
	</delete>
	
	<!-- 根据参数查询列表-->
	<select id="findByParams" resultMap="StockResultMap">
		SELECT	<include refid="base_column" />
		FROM 	T_STOCK
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 分页查询-->
	<select id="findByPage" resultMap="StockResultMap">
		SELECT
		<include refid="base_column" />
		FROM T_STOCK
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>

       <!-- 分页查询-->
       <select id="findListByPage" resultMap="StockResultMap">
		SELECT
		<include refid="base_column" />
		FROM T_STOCK
		<where> 1=1
			<include refid="where_column" />
		</where>
					
	     <if test="order != null and order != ''">
		order by  ${order}
	     </if>
	     
		<if test="pageNumber != null  and pageSize !=null ">
			limit  #{pageNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	     </if>
			
		
	</select>
	
	
		<!-- 删除多条记录-->
	<delete id="deletes">
		DELETE	FROM T_STOCK
		<where> 
			<include refid="where_column" />
		</where>
	</delete>
	
 <!-- 新分页查询-->
       <select id="findListNewByPage" resultMap="StockResultMap">
		SELECT
		<include refid="base_column" />
		FROM T_STOCK
		<where> 1=1
			<include refid="where_column" />
		</where>
					
	     <if test="order != null and order != ''">
		order by  ${order}
	     </if>
	     
		<if test="pageNumber != null  and pageSize !=null ">
			limit  #{pageNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	     </if>
			
		
	</select>


	<update id="updateByOptimistic" parameterType="com.yuan.redis.entity.Stock">
		update stock
		<set>
			sale = sale + 1,
		</set>
		WHERE id = #{id,jdbcType=INTEGER}
		AND sale = #{sale,jdbcType=INTEGER}
	</update>





</mapper>