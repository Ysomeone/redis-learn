<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.yuan.redis.dao.SysLogDao">
	
	<resultMap id="SysLogResultMap" type="com.yuan.redis.entity.SysLog">
		<id property="id" column="id"  />
		<result property="userId" column="user_id" />
		<result property="module" column="module" />
		<result property="data" column="data" />
		<result property="memo" column="memo" />
		<result property="createTime" column="create_time" />
	</resultMap>
	
	<!-- 定义可重用的SQL代码段，可以包含在其他语句中 -->
	<sql id="base_column">
		 id ,user_id ,module ,data ,memo ,create_time 
	</sql>
	
	<sql id="base_value_column">
		 #{id},#{userId},#{module},#{data},#{memo},#{createTime}
	</sql>
	
	<!-- 定义可重用的WHERE SQL公共代码段，可以包含在其他语句中 -->
	<sql id="where_column">
       <if test="ids != null  and ids.size > 0  ">
			AND ID IN
			<foreach item="id" index="index" collection="ids" open="("
				separator="," close=")">
				#{id}
			</foreach>
		</if>

		<if test="id != null ">
			AND id = #{id,jdbcType=BIGINT}
		</if>

	    	<!-- 大于等于id -->
		<if test="filter_ids != null">
			AND id<![CDATA[>=]]>#{filter_ids}
		</if>
		<!-- 小于等于id -->
	    <if test="filter_ide!= null">
			AND id<![CDATA[<=]]>#{filter_ide}
		</if>


		<if test="userId != null ">
			AND user_id = #{userId,jdbcType=BIGINT}
		</if>

	    	<!-- 大于等于user_id -->
		<if test="filter_userIds != null">
			AND user_id<![CDATA[>=]]>#{filter_userIds}
		</if>
		<!-- 小于等于user_id -->
	    <if test="filter_userIde!= null">
			AND user_id<![CDATA[<=]]>#{filter_userIde}
		</if>


		<if test="module != null ">
			AND module = #{module,jdbcType=VARCHAR}
		</if>
	   <if test="modulelike != null ">
			AND module like CONCAT('%',#{modulelike},'%')
		</if>



		<if test="data != null ">
			AND data = #{data,jdbcType=VARCHAR}
		</if>
	   <if test="datalike != null ">
			AND data like CONCAT('%',#{datalike},'%')
		</if>



		<if test="memo != null ">
			AND memo = #{memo,jdbcType=VARCHAR}
		</if>
	   <if test="memolike != null ">
			AND memo like CONCAT('%',#{memolike},'%')
		</if>



		<if test="createTime != null ">
			AND create_time = #{createTime,jdbcType=TIMESTAMP}
		</if>
	    	<!-- 大于等于create_time -->
		<if test="filter_createTimes != null">
			AND date_format(create_time,'%Y%m%d')<![CDATA[>=]]>#{filter_createTimes}
		</if>
		<!-- 小于等于create_time -->
	    <if test="filter_createTimee!= null">
			AND date_format(create_time,'%Y%m%d')<![CDATA[<=]]>#{filter_createTimee}
		</if>



	</sql>
	
	<!-- 设置语句 -->
	<sql id="set_column">
		<if test="id != null ">
			id = #{id,jdbcType=BIGINT},
		</if>
		<if test="userId != null ">
			user_id = #{userId,jdbcType=BIGINT},
		</if>
		<if test="module != null ">
			module = #{module,jdbcType=VARCHAR},
		</if>
		<if test="data != null ">
			data = #{data,jdbcType=VARCHAR},
		</if>
		<if test="memo != null ">
			memo = #{memo,jdbcType=VARCHAR},
		</if>
		<if test="createTime != null ">
			create_time = #{createTime,jdbcType=TIMESTAMP},
		</if>
	</sql>

	<!-- 根据ID查询 -->
	<select id="find" resultMap="SysLogResultMap">
		SELECT	<include refid="base_column" />
		FROM	SYS_LOG
		WHERE	ID=#{id,jdbcType=BIGINT}
	</select>
	
	<!-- 查询所有 -->
	<select id="findAll" resultMap="SysLogResultMap">
		SELECT	<include refid="base_column" />
		FROM	SYS_LOG
	</select>
	
	<!-- 统计记录数 -->
	<select id="count" resultType="long">
		SELECT COUNT(*) FROM SYS_LOG
		<where> 
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 插入 -->
	<insert id="insert" parameterType="com.yuan.redis.entity.SysLog">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">  
	          SELECT LAST_INSERT_ID() AS ID    
	    </selectKey>  
		INSERT SYS_LOG 
				(<include refid="base_column" /> )
		VALUES	(<include refid="base_value_column" />)
	</insert>
	
	<!-- 修改 -->
	<update id="update" parameterType="com.yuan.redis.entity.SysLog">
		UPDATE	SYS_LOG
		<set>
			<include refid="set_column" />
		</set>
		WHERE	ID = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 删除单条记录 -->
	<delete id="delete">
		DELETE	FROM SYS_LOG
		WHERE	ID = #{id,jdbcType=BIGINT}
	</delete>
	
	
	<!-- 删除多条记录-->
	<delete id="deleteAll">
		DELETE	FROM SYS_LOG
		WHERE	ID	IN
    	<foreach item="SysLogId" index="index" collection="ids" open="(" separator="," close=")">
	  		#{SysLogId} 
		</foreach>
	</delete>
	
	<!-- 根据参数查询列表-->
	<select id="findByParams" resultMap="SysLogResultMap">
		SELECT	<include refid="base_column" />
		FROM 	SYS_LOG
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>
	
	<!-- 分页查询-->
	<select id="findByPage" resultMap="SysLogResultMap">
		SELECT
		<include refid="base_column" />
		FROM SYS_LOG
		<where> 1=1
			<include refid="where_column" />
		</where>
	</select>

       <!-- 分页查询-->
       <select id="findListByPage" resultMap="SysLogResultMap">
		SELECT
		<include refid="base_column" />
		FROM SYS_LOG
		<where> 1=1
			<include refid="where_column" />
		</where>
					
	     <if test="order != null and order != ''">
		order by  ${order}
	     </if>
	     
		<if test="pageNumber != null  and pageSize !=null ">
			limit  #{pageNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	     </if>
			
		
	</select>
	
	
		<!-- 删除多条记录-->
	<delete id="deletes">
		DELETE	FROM SYS_LOG
		<where> 
			<include refid="where_column" />
		</where>
	</delete>
	
 <!-- 新分页查询-->
       <select id="findListNewByPage" resultMap="SysLogResultMap">
		SELECT
		<include refid="base_column" />
		FROM SYS_LOG
		<where> 1=1
			<include refid="where_column" />
		</where>
					
	     <if test="order != null and order != ''">
		order by  ${order}
	     </if>
	     
		<if test="pageNumber != null  and pageSize !=null ">
			limit  #{pageNumber,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	     </if>
			
		
	</select>
	
</mapper>